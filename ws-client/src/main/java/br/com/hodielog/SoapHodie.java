
package br.com.hodielog;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SoapHodie", targetNamespace = "http://hodielog.com.br/", wsdlLocation = "file:/Users/apple/Documents/works/webservice/hodiewsR.xml.wsdl")
public class SoapHodie
    extends Service
{

    private final static URL SOAPHODIE_WSDL_LOCATION;
    private final static WebServiceException SOAPHODIE_EXCEPTION;
    private final static QName SOAPHODIE_QNAME = new QName("http://hodielog.com.br/", "SoapHodie");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/apple/Documents/works/webservice/hodiewsR.xml.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SOAPHODIE_WSDL_LOCATION = url;
        SOAPHODIE_EXCEPTION = e;
    }

    public SoapHodie() {
        super(__getWsdlLocation(), SOAPHODIE_QNAME);
    }

    public SoapHodie(WebServiceFeature... features) {
        super(__getWsdlLocation(), SOAPHODIE_QNAME, features);
    }

    public SoapHodie(URL wsdlLocation) {
        super(wsdlLocation, SOAPHODIE_QNAME);
    }

    public SoapHodie(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SOAPHODIE_QNAME, features);
    }

    public SoapHodie(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SoapHodie(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SoapHodieSoap
     */
    @WebEndpoint(name = "SoapHodieSoap")
    public SoapHodieSoap getSoapHodieSoap() {
        return super.getPort(new QName("http://hodielog.com.br/", "SoapHodieSoap"), SoapHodieSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SoapHodieSoap
     */
    @WebEndpoint(name = "SoapHodieSoap")
    public SoapHodieSoap getSoapHodieSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://hodielog.com.br/", "SoapHodieSoap"), SoapHodieSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SOAPHODIE_EXCEPTION!= null) {
            throw SOAPHODIE_EXCEPTION;
        }
        return SOAPHODIE_WSDL_LOCATION;
    }

}
